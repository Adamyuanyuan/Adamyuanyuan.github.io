<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[在Kerberos环境下配置hue通过spark-thrift-server访问SparkSql]]></title>
      <url>http://flume.cn/2016/09/05/%E5%9C%A8Kerberos%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%85%8D%E7%BD%AEhue%E9%80%9A%E8%BF%87spark-thrift-server%E8%AE%BF%E9%97%AESparkSql/</url>
      <content type="html"><![CDATA[<p>hue-spark-thriftserver-kerberos</p>
<h3 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h3><p>Kerberos项目最后要对基于Hue的TODP平台进行安全测试，在搭建配置的过程中踩了一些坑，现在把其中的配置与步骤进行总结，以免以后忘记。</p>
<p>其中用到以下代号：<br>40机器：hue平台所在的机器<br>76机器：spark thrift服务端口10010，hive-thrift-server服务端口10000<br>74机器：spark thrift服务端口10010，hive-thrift-server服务端口10000<br>TEST-BDD-HIVESERVER机器：负载均衡所在的机器，负载均衡机器需要配合开启10000和10010端口</p>
<p>在kerberos认证下, sparksql的thriftserver连接hiveserver2变得相对复杂，主要是因为各种kerberos认证出现各种问题。后来由于hive使用了负载均衡，所以spark-sql也需加入负载均衡，否则不能使用，就是这个负载均衡服务器的加入使得kerberos认证变得更加复杂，使得不明原理的新手在配置kerberos的keytab与principal时各种不匹配。这里是通过Hue可视化界面调用后台的sparksql,然后sparksql通过JDBC连接Hive的hiveServer2服务。</p>
<h3 id="40机器hue端配置"><a href="#40机器hue端配置" class="headerlink" title="40机器hue端配置"></a>40机器hue端配置</h3><p>进入40机器hue所在的目录<br><figure class="highlight bash"><figcaption><span>hue.ini</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> /usr/lib/hue/ </div><div class="line">$ vim desktop/conf/hue.ini</div></pre></td></tr></table></figure></p>
<p>修改hue的配置文件如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1119 [spark]</div><div class="line">...</div><div class="line">1134   <span class="comment"># spark-sql config</span></div><div class="line">1135   spark_sql_server_host=TEST-BDD-HIVESERVER</div><div class="line">1136   <span class="comment">## spark_sql_server_port=10010</span></div></pre></td></tr></table></figure></p>
<p>由于此处使用了负载均衡，所以上述TEST-BDD-HIVESERVER指向的是负载均衡所在的ip，最终会转发给两个spark-thrift-server</p>
<h3 id="Kerberos服务器端配置"><a href="#Kerberos服务器端配置" class="headerlink" title="Kerberos服务器端配置"></a>Kerberos服务器端配置</h3><p>生成类似 hive/test-bdd-hiveserver@HADOOP.CHINATELECOM.CN 的keytab，配置了负载均衡后，使用test-bdd-hiveserver</p>
<h3 id="76机器上的配置"><a href="#76机器上的配置" class="headerlink" title="76机器上的配置"></a>76机器上的配置</h3><p>76机器与74机器配置步骤一样，只是hive-site.xml需要改一处，将下面的 076改成 074即可<br><figure class="highlight bash"><figcaption><span>hive-site.xml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">157 &lt;property&gt;</div><div class="line">158    &lt;name&gt;hive.server2.thrift.bind.host&lt;/name&gt;</div><div class="line">159    &lt;value&gt;<span class="built_in">test</span>-bdd-076&lt;/value&gt;</div><div class="line">160    &lt;description&gt;TCP port number to listen on, default 10000&lt;/description&gt;</div><div class="line">161  &lt;/property&gt;</div></pre></td></tr></table></figure></p>
<p>其它都一样，所以在这里只写076的配置步骤</p>
<h4 id="从hive-keytab创建spark的keytab"><a href="#从hive-keytab创建spark的keytab" class="headerlink" title="从hive.keytab创建spark的keytab"></a>从hive.keytab创建spark的keytab</h4><p>然后在/etc/hive/conf/下创建spark需要的keytab，在这里使用hiveserver的keytab，将已有的hive.keytab_hiveserver 拷贝成 hive.keytab_sparkthrift，然后修改权限如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-rw------- 1 hive hive     424 8月  23 09:55 hive.keytab_hiveserver</div><div class="line">-rw------- 1 op   bigdata  424 9月   3 12:25 hive.keytab_sparkthrift</div></pre></td></tr></table></figure>
<p>修改好后用如下命令检查：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ sudo klist -k hive.keytab_sparkthrift </div><div class="line">Keytab name: FILE:hive.keytab_sparkthrift</div><div class="line">KVNO Principal</div><div class="line">---- --------------------------------------------------------------------------</div><div class="line">   1 hive/<span class="built_in">test</span>-bdd-hiveserver@HADOOP.CHINATELECOM.CN</div><div class="line">   1 hive/<span class="built_in">test</span>-bdd-hiveserver@HADOOP.CHINATELECOM.CN</div><div class="line">   1 hive/<span class="built_in">test</span>-bdd-hiveserver@HADOOP.CHINATELECOM.CN</div><div class="line">   1 hive/<span class="built_in">test</span>-bdd-hiveserver@HADOOP.CHINATELECOM.CN</div><div class="line">   1 hive/<span class="built_in">test</span>-bdd-hiveserver@HADOOP.CHINATELECOM.CN</div></pre></td></tr></table></figure>
<p>如果klist是如上结果，就对了</p>
<h4 id="配置spark需要的hive-site-xml"><a href="#配置spark需要的hive-site-xml" class="headerlink" title="配置spark需要的hive-site.xml"></a>配置spark需要的hive-site.xml</h4><p>由于需要修改hive的一些配置，进入76机器spark所在的目录，将<code>/etc/hive/conf/</code>下的<code>hive-site.xml</code>拷贝到spark的conf下，赋予权限并修改<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo cp /etc/hive/conf/hive-site.xml <span class="variable">$SPARK_HOME</span>/conf/</div><div class="line">$ <span class="built_in">cd</span> <span class="variable">$SPARK_HOME</span></div><div class="line">$ sudo chmod op conf/hive-site.xml</div><div class="line">$ vim conf/hive-site.xml</div></pre></td></tr></table></figure></p>
<p>修改hive-site.xml,增加hive.server2.thrift.bind.host</p>
<figure class="highlight bash"><figcaption><span>hive-site.xml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">145 &lt;!-- ZooKeeper conf--&gt;</div><div class="line">146 &lt;property&gt;</div><div class="line">147   &lt;name&gt;hive.server2.enable.doAs&lt;/name&gt;</div><div class="line">148   &lt;value&gt;<span class="literal">false</span>&lt;/value&gt;</div><div class="line">149   &lt;description&gt; Impersonate the connected user &lt;/description&gt;</div><div class="line">150 &lt;/property&gt;</div><div class="line">151 &lt;property&gt;</div><div class="line">152   &lt;name&gt;hive.server2.thrift.port&lt;/name&gt;</div><div class="line">153   &lt;value&gt;10010&lt;/value&gt;</div><div class="line">154   &lt;description&gt;TCP port number to listen on, default 10000&lt;/description&gt;</div><div class="line">155 &lt;/property&gt;</div><div class="line">156 </div><div class="line">157 &lt;property&gt;</div><div class="line">158    &lt;name&gt;hive.server2.thrift.bind.host&lt;/name&gt;</div><div class="line">159    &lt;value&gt;<span class="built_in">test</span>-bdd-076&lt;/value&gt;</div><div class="line">160    &lt;description&gt;TCP port number to listen on, default 10000&lt;/description&gt;</div><div class="line">161  &lt;/property&gt;</div><div class="line">162 </div><div class="line">163 &lt;property&gt;</div><div class="line">164   &lt;name&gt;hive.metastore.execute.setugi&lt;/name&gt;</div><div class="line">165   &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">166 &lt;/property&gt;</div><div class="line">...</div><div class="line">209 &lt;property&gt;</div><div class="line">210    &lt;name&gt;hive.server2.authentication.kerberos.principal&lt;/name&gt;</div><div class="line">211    &lt;value&gt;hive/<span class="built_in">test</span>-bdd-hiveserver@HADOOP.CHINATELECOM.CN&lt;/value&gt;</div><div class="line">212  &lt;/property&gt;</div><div class="line">213 &lt;property&gt;</div><div class="line">214   &lt;name&gt;hive.server2.authentication.kerberos.keytab&lt;/name&gt;</div><div class="line">215   &lt;value&gt;/etc/hive/conf/hive.keytab_sparkthrift&lt;/value&gt;</div><div class="line">216 &lt;/property&gt;</div></pre></td></tr></table></figure>
<h4 id="启动Spark-thrift-server"><a href="#启动Spark-thrift-server" class="headerlink" title="启动Spark-thrift-server"></a>启动Spark-thrift-server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> <span class="variable">$SPARK_HOME</span></div><div class="line">$ ./sbin/start-thriftserver.sh</div></pre></td></tr></table></figure>
<p>可以通过如下日志查看是否启动成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim logs/spark-op-org.apache.spark.sql.hive.thriftserver.HiveThriftServer2-1-TEST-BDD-076.out</div></pre></td></tr></table></figure></p>
<p>启动成功会看到如下日志:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> 96 16/09/05 13:41:25 INFO AbstractService: Service:HiveServer2 is started.</div><div class="line"> 97 16/09/05 13:41:25 INFO HiveThriftServer2: HiveThriftServer2 started</div><div class="line"> 98 16/09/05 13:41:25 INFO UserGroupInformation: Login successful <span class="keyword">for</span> user hive/<span class="built_in">test</span>-bdd-hiveserver@HADOOP.CHINATELECOM.CN using keytab file /etc/hive/conf/hive.keytab_sparkthrift</div><div class="line"> 99 16/09/05 13:41:25 INFO AbstractDelegationTokenSecretManager: Updating the current master key <span class="keyword">for</span> generating delegation tokens</div><div class="line">100 16/09/05 13:41:25 INFO TokenStoreDelegationTokenSecretManager: New master key with key id=0</div><div class="line">101 16/09/05 13:41:25 INFO TokenStoreDelegationTokenSecretManager: Starting expired delegation token remover thread, tokenRemoverScanInterval=60 min(s)</div><div class="line">102 16/09/05 13:41:25 INFO AbstractDelegationTokenSecretManager: Updating the current master key <span class="keyword">for</span> generating delegation tokens</div><div class="line">103 16/09/05 13:41:25 INFO TokenStoreDelegationTokenSecretManager: New master key with key id=1</div><div class="line">104 16/09/05 13:41:25 INFO ThriftCLIService: Starting ThriftBinaryCLIService on port 10010 with 5...500 worker threads</div></pre></td></tr></table></figure></p>
<h3 id="负载均衡机器的查看"><a href="#负载均衡机器的查看" class="headerlink" title="负载均衡机器的查看"></a>负载均衡机器的查看</h3><p>进入 67.121机器<br>输入 命令 <code>sudo ipvsadm -ln</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ sudo ipvsadm -ln</div><div class="line">IP Virtual Server version 1.2.1 (size=4194304)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  10.142.67.123:10000 wlc persistent 7200 synproxy</div><div class="line">  -&gt; 10.142.78.74:10000           FullNat 50     3          0         </div><div class="line">  -&gt; 10.142.78.76:10000           FullNat 50     0          0         </div><div class="line">TCP  10.142.67.123:10010 wlc persistent 7200 synproxy</div><div class="line">  -&gt; 10.142.78.74:10010           FullNat 50     0          0         </div><div class="line">  -&gt; 10.142.78.76:10010           FullNat 50     2          0</div></pre></td></tr></table></figure>
<p>就可以看到负载均衡的情况了：</p>
<h3 id="踩坑说明以及解决方案"><a href="#踩坑说明以及解决方案" class="headerlink" title="踩坑说明以及解决方案"></a>踩坑说明以及解决方案</h3><h4 id="缺少配置kerberos认证错误"><a href="#缺少配置kerberos认证错误" class="headerlink" title="缺少配置kerberos认证错误"></a>缺少配置kerberos认证错误</h4><p>需要在hive-site.xml文件中添加kerberos认证相关配置</p>
<h4 id="kerberos认证失败"><a href="#kerberos认证失败" class="headerlink" title="kerberos认证失败"></a>kerberos认证失败</h4><p>1)  在hive-site.xml中配置好kerberos认证，但是op用户下无法读取hive.keytab的问题，出现unable to login …given keytab/principal 以及Unable to obtain password from user。因为hive.keytab 是hive用户创建的，op用户无法读取，导致看似kerberos已经配置好，<br>但是程序没有读取权限，依旧认为没有配置好，这是会有在日志文件中会有NULLPOINT类似的错误提示，说明是没有读取权限。解决方案是复制hive.keytab到op用户下。<br>2）在hue界面连接spark时可能会出现10010端口不能连接的问题，这是sparkthrift没有启动导致的；<br>3）spark thriftserver明明已经启动，但是hue界面仍旧不能连接，出现TTransportException的错误，原因是kerberos配置没有配置正确，即没有配置kerberos认证的keytab与principal。hive/test-bdd-hiveserver必须与hive.keytab_hiveserver配套使用，同理，test-bdd-074或者 test-bdd-076必须与hive/test-bdd-74或者hive/test-bdd-76配套使用，否则出现认证失败的问题。</p>
<h4 id="hue的配置问题。"><a href="#hue的配置问题。" class="headerlink" title="hue的配置问题。"></a>hue的配置问题。</h4><p>在hue的desktop/conf目录下hue.ini文件中，主要配置spark_sql_server_host，也就是spark thriftserver所在主机，这里可以是负载均衡服务器TEST-BDD-HIVESERVER,spark_sql_server_port 是spark thriftserver的服务端口。<br>需要注意的是，加上kerberos认证后，主机名不能是ip地址的形式，需要FQDN的形式。hive的配置需要注意的是hive_server_host，这里绝对不能是hiveserver2的服务器的地址，一定是负载均衡服务器的地址，不然在hue界面连接HIVE时出现<br>Unable to access databases, Query Server or Metastore may be down.的错误以及GSS initial failed的错误，无法访问hive数据库。</p>
<h4 id="metastore的问题"><a href="#metastore的问题" class="headerlink" title="metastore的问题"></a>metastore的问题</h4><p>连接metastore也需要principal的认证。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">20 &lt;property&gt;</div><div class="line">221   &lt;name&gt;hive.metastore.sasl.enabled&lt;/name&gt;</div><div class="line">222   &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">223   &lt;description&gt;If <span class="literal">true</span>, the metastore thrift interface will be secured with SASL. Clients must authenticate with Kerberos.&lt;/description&gt;</div><div class="line">224 &lt;/property&gt;</div><div class="line">225 &lt;property&gt;</div><div class="line">226   &lt;name&gt;hive.metastore.kerberos.principal&lt;/name&gt;</div><div class="line">227   &lt;value&gt;hive/_HOST@HADOOP.CHINATELECOM.CN&lt;/value&gt;</div><div class="line">228   &lt;description&gt;The service principal <span class="keyword">for</span> the metastore thrift server. The special string _HOST will be replaced automatically with the correct host name.&lt;/description&gt;</div><div class="line">229 &lt;/property&gt;</div></pre></td></tr></table></figure></p>
<p>之所以问题多多，主要原因是对kerberos+Hive+lvs整体原理没有搞清楚，以至于在配置过程中出现各种错误。我们搭建的hive集群有74,76两台主机，spark thriftserver也有74,76两台主机，负载均衡服务器在test-bdd-hiveserver上。在配置时，需要将spark-sql-server-host配置成test-bdd-hiveserver,因为对spark而言，74与76上的hiveserver是一个整体，不能配置成单一的主机，不然lvs可能会将服务分到另外一台主机上，造成主机配置失败。</p>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <url>http://flume.cn/about/index.html</url>
      <content type="html"><![CDATA[<p>hi，你好</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[timeline]]></title>
      <url>http://flume.cn/timeline/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
